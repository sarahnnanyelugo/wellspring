@import "../../variables";
@import "../../shared-styles";
$items: 4;
$transition-duration: 0.5s;
$transition-delay: 0.05s;

* {
  box-sizing: border-box;
}
.navbar-container2 {
  height: 20px;
  background: rgb(0, 79, 157) !important;
  box-shadow: none !important;
  position: fixed;
  z-index: 200000000000000000000;
  // max-height: 50vh !important;
  padding-bottom: 100px !important;
  transition: transform 200ms ease-in;
  top: 0px;
  transform: translateY(0);
  @media screen and (max-width: 620px) {
    // height: fit-content !important;
  }
  &.home {
    background: transparent !important;
  }
  &.hide {
    top: -130px;
    transform: translateY(-100%);
  }

  .hide-logo {
    visibility: hidden;
  }
  h1 {
    color: #fff !important;
  }
  ul li {
    font-size: 12px;
    margin: 10px;
    .link-alteration {
      color: #fff !important;
    }
  }
  .dropdown-menu {
    -webkit-transition: height 0.5s ease !important;
    -webkit-transition-delay: 0.4s !important;
    border-radius: none !important;
    width: 200px;
    transition: height 0.5s ease !important;
    height: fit-content;
  }

  .dropdown-menu.show {
    opacity: 1 !important;

    display: block;
    -webkit-transition: height 0.5s ease !important;
    -webkit-transition-delay: 0.4s !important;
    transform: translateY(0);
  }
  .logo-div {
    margin-top: -20px;
    @media screen and (max-width: 620px) {
      margin-left: 0 !important;
      margin-top: -100px;
    }
    img {
      @media screen and (max-width: 620px) {
        height: 10px !important;
        width: 10px;
        display: none;
      }
    }
  }
}

.ReactPlayground-StyledExample-module--cls2--Z1-mo {
  border: none !important;
}

.navbar-container {
  background: inherit !important;
  box-shadow: none !important;
  position: relative;
  z-index: 200000000000000000000;
  .cool-link3::after {
    content: "";
    display: block;
    width: 0;
    height: 4px;
    background: $yellow;
    transition: width 0.3s;
    position: relative;
    z-index: 300000000000000;
    margin-top: -35px;
  }

  .cool-link3:hover::after {
    width: 100%;
  }
}

.bg-light {
  --bs-bg-opacity: 0;
  background: inherit !important;
}

// .nav-link {
//   color: #fff !important;
//   margin-top: -35px !important;
//   font-weight: 900;
//   margin-left: 10px;
// }

.navbar-expand-lg .navbar-nav .nav-link {
  transition: box-shadow 0.4s ease;
}
.dropdown-item {
  font-size: 14px;
  color: $lightblue2 !important;
}

.cool-link::after {
  content: "";
  display: block;
  width: 0;
  height: 4px;
  background: $yellow;
  transition: width 0.3s;
  position: relative;
  z-index: 300000000000000;
}

.cool-link:hover::after {
  width: 100%;
}
.mobile-menu {
  .container {
    position: relative;
    margin: 35px auto 0;
    width: 300px;
    height: 534px;
    background-color: #533557;
    overflow: hidden;
  }

  /* Toggle Functionality */

  #toggle {
    display: none; //hides the checkbox
  }

  // Styles for the 'open' state, if the checkbox is checked
  #toggle:checked {
    //Any element you need to change the style if menu is open goes here, using the sibling selector (~)
    & ~ .toggle-container .button-toggle {
      box-shadow: 0 0 0 550px rgba(0, 0, 0, 0.1),
        inset 0 0 0 20px rgba(0, 0, 0, 0.1);

      &:before {
        transform: translateY(-50%) rotate(45deg) scale(1);
      }

      &:after {
        transform: translateY(-50%) rotate(-45deg) scale(1);
      }
    }

    // Open Nav
    & ~ .nav {
      margin-bottom: 100px;
      pointer-events: auto;
      transform: translate(50px, 50px);

      // Restoring nav items from 'lines' in the menu icon
      .nav-item {
        color: #ec7263;
        letter-spacing: 0;
        height: 40px;
        line-height: 40px;
        margin-top: 0;
        opacity: 1;
        transform: scaleY(1);
        transition: $transition-duration, opacity 0.1s;

        // Setting delays for the nav items in open transition
        @for $i from 1 through $items {
          &:nth-child(#{$i}) {
            $delay: ($items - $i) * $transition-delay;
            transition-delay: $delay;
            &:before {
              transition-delay: $delay;
            }
          }
        }

        // Hide the lines
        &:before {
          opacity: 0;
        }
      }
    }

    & ~ .dummy-content {
      padding-top: 30px;

      &:before {
        background-color: rgba(0, 0, 0, 0.3);
      }
    }
  }

  /* Toggle Button */

  .button-toggle {
    position: absolute;
    display: inline-block;
    width: 20px;
    height: 20px;
    margin: 25px;
    background-color: transparent;
    border: none;
    cursor: pointer;
    border-radius: 100%;
    transition: $transition-duration + 0.1;

    // Shadow on Hover
    &:hover {
      box-shadow: 0 0 0 8px rgba(0, 0, 0, 0.1),
        inset 0 0 0 20px rgba(0, 0, 0, 0.1);
    }

    // Making the 'X' icon using `:before` and `:after` pseudo-elements
    // Initially hidden beause of `scale(0)` transformation

    &:before,
    &:after {
      position: absolute;
      content: "";
      top: 50%;
      left: 0;
      width: 100%;
      height: 2px;
      background-color: #ec7263;
      border-radius: 5px;
      transition: $transition-duration;
    }

    &:before {
      transform: translateY(-50%) rotate(45deg) scale(0);
    }

    &:after {
      transform: translateY(50%) rotate(-45deg) scale(0);
    }
  }

  /* Menu */

  .nav {
    display: inline-block;
    margin: 25px 25px 20px;
    pointer-events: none;
    transition: $transition-duration;
  }

  // Showing nav items as lines, making up the hamburger menu icon
  .nav-item {
    position: relative;
    display: inline-block;
    float: left;
    clear: both;
    color: transparent;
    font-size: 14px;
    letter-spacing: -6.2px;
    height: 7px;
    line-height: 7px;
    text-transform: uppercase;
    white-space: nowrap;
    transform: scaleY(0.2);
    transition: $transition-duration, opacity 1s;

    //Set delays for the nav items in close transition
    @for $i from 1 through $items {
      &:nth-child(#{$i}) {
        $delay: ($i - 1) * $transition-delay;
        transition-delay: $delay;
        &:before {
          transition-delay: $delay;
        }
      }
    }

    // Adjusting width for first line
    &:nth-child(1) {
      letter-spacing: -8px;
    }

    // Adjusting width for second line
    &:nth-child(2) {
      letter-spacing: -7px;
    }

    // Adjusting the fourth element onwards
    &:nth-child(n + 4) {
      letter-spacing: -8px;
      margin-top: -7px;
      opacity: 0;
    }

    //getting lines for the hamburger menu icon
    &:before {
      position: absolute;
      content: "";
      top: 50%;
      left: 0;
      width: 100%;
      height: 2px;
      background-color: #ec7263;
      transform: translateY(-50%) scaleY(5);
      transition: $transition-duration;
    }
  }

  /* Dummy Content */

  .dummy-content {
    position: relative;
    text-align: center;
    transition: $transition-duration;

    &:before {
      position: absolute;
      content: "";
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: transparent;
      z-index: 2;
      transition: $transition-duration;
    }
  }

  .circle {
    display: inline-block;
    width: 75px;
    height: 75px;
    background-color: #ec7263;
    border-radius: 100%;
  }

  .text {
    margin: 15px 0 30px;

    span {
      display: inline-block;
      height: 10px;
      margin: 0 5px;
      background-color: #c06162;
      border-radius: 5px;

      &:first-child {
        width: 50px;
      }

      &:last-child {
        width: 80px;
      }
    }
  }

  .square-top {
    display: inline-block;
    position: relative;
    width: 200px;
    height: 300px;
    background-color: #febe7e;
    z-index: 1;
  }

  .square-behind {
    display: inline-block;
    position: relative;
    top: -256px;
    width: 250px;
    height: 210px;
    background-color: #c28683;

    &:before,
    &:after {
      position: absolute;
      content: "";
      top: 0;
      width: 40%;
      height: 100%;
    }

    &:before {
      left: 0;
      background-color: #9d567c;
    }

    &:after {
      right: 0;
      background-color: #958c6b;
    }
  }

  @media screen and (min-width: 620px) {
    display: none;
  }
}
